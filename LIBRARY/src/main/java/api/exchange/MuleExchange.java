
package api.exchange;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "mule_Exchange", targetNamespace = "http://exchange.mule.ptr/", wsdlLocation = "file:/C:/Users/\u0411\u043e\u043d\u0434\u0430\u0440\u0435\u043d\u043a\u043e_\u0410_\u0421/AppData/Local/Temp/tempdir2430591180248627510.tmp/Exchange_1.wsdl")
public class MuleExchange
    extends Service
{

    private final static URL MULEEXCHANGE_WSDL_LOCATION;
    private final static WebServiceException MULEEXCHANGE_EXCEPTION;
    private final static QName MULEEXCHANGE_QNAME = new QName("http://exchange.mule.ptr/", "mule_Exchange");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/\u0411\u043e\u043d\u0434\u0430\u0440\u0435\u043d\u043a\u043e_\u0410_\u0421/AppData/Local/Temp/tempdir2430591180248627510.tmp/Exchange_1.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MULEEXCHANGE_WSDL_LOCATION = url;
        MULEEXCHANGE_EXCEPTION = e;
    }

    public MuleExchange() {
        super(__getWsdlLocation(), MULEEXCHANGE_QNAME);
    }

    public MuleExchange(WebServiceFeature... features) {
        super(__getWsdlLocation(), MULEEXCHANGE_QNAME, features);
    }

    public MuleExchange(URL wsdlLocation) {
        super(wsdlLocation, MULEEXCHANGE_QNAME);
    }

    public MuleExchange(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MULEEXCHANGE_QNAME, features);
    }

    public MuleExchange(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MuleExchange(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MuleExchangePortType
     */
    @WebEndpoint(name = "mule_ExchangeSoap")
    public MuleExchangePortType getMuleExchangeSoap() {
        return super.getPort(new QName("http://exchange.mule.ptr/", "mule_ExchangeSoap"), MuleExchangePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MuleExchangePortType
     */
    @WebEndpoint(name = "mule_ExchangeSoap")
    public MuleExchangePortType getMuleExchangeSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://exchange.mule.ptr/", "mule_ExchangeSoap"), MuleExchangePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MULEEXCHANGE_EXCEPTION!= null) {
            throw MULEEXCHANGE_EXCEPTION;
        }
        return MULEEXCHANGE_WSDL_LOCATION;
    }

}
